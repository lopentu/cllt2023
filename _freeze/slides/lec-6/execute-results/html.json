{
  "hash": "735fa6de7d4d8d932c6d67eb73ceaf97",
  "result": {
    "markdown": "---\ntitle: \"SLR: Mathematical models for inference\"\nsubtitle: \"STA 210 - Spring 2022\"\nauthor: \"Dr. Mine Çetinkaya-Rundel\"\nfooter:  \"[sta210-s22.github.io/website](https://sta210-s22.github.io/website/)\"\nlogo: \"images/logo.png\"\nformat: \n  revealjs:\n    theme: slides.scss\n    multiplex: true\n    transition: fade\n    slide-number: true\n    incremental: true \n    chalkboard: true\neditor: visual\nexecute:\n  freeze: auto\n---\n\n\n\n# Welcome\n\n## Computational setup\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# load packages\nlibrary(tidyverse)   # for data wrangling and visualization\nlibrary(tidymodels)  # for modeling\nlibrary(openintro)   # for the duke_forest dataset\nlibrary(scales)      # for pretty axis labels\nlibrary(knitr)       # for pretty tables\nlibrary(kableExtra)  # also for pretty tables\n\n# set default theme and larger font size for ggplot2\nggplot2::theme_set(ggplot2::theme_minimal(base_size = 20))\n```\n:::\n\n# Recap of last lecture\n\n## Data: Duke Forest houses\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](lec-6_files/figure-revealjs/unnamed-chunk-1-1.png){fig-align='center' width=80%}\n:::\n:::\n\n## The regression model {.smaller}\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndf_fit <- linear_reg() %>%\n  set_engine(\"lm\") %>%\n  fit(price ~ area, data = duke_forest)\n\ntidy(df_fit) %>%\n  kable(digits = 2)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> term </th>\n   <th style=\"text-align:right;\"> estimate </th>\n   <th style=\"text-align:right;\"> std.error </th>\n   <th style=\"text-align:right;\"> statistic </th>\n   <th style=\"text-align:right;\"> p.value </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> (Intercept) </td>\n   <td style=\"text-align:right;\"> 116652.33 </td>\n   <td style=\"text-align:right;\"> 53302.46 </td>\n   <td style=\"text-align:right;\"> 2.19 </td>\n   <td style=\"text-align:right;\"> 0.03 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> area </td>\n   <td style=\"text-align:right;\"> 159.48 </td>\n   <td style=\"text-align:right;\"> 18.17 </td>\n   <td style=\"text-align:right;\"> 8.78 </td>\n   <td style=\"text-align:right;\"> 0.00 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n. . .\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n-   **Intercept:** Duke Forest houses that are 0 square feet are expected to sell, on average, for $116,652.\n-   **Slope:** For each additional square foot, the model predicts the sale price of Duke Forest houses to be higher, on average, by $159.\n\n## Inference for simple linear regression\n\n-   Calculate a confidence interval for the slope, $\\beta_1$\n\n-   Conduct a hypothesis test for the interval, $\\beta_1$\n\n## Confidence interval via bootstrapping {.smaller}\n\n-   Bootstrap new samples from the original sample\n-   Fit models to each of the samples and estimate the slope\n-   Use features of the distribution of the bootstrapped slopes to construct a confidence interval\n\n## Bootstrapping pipeline I\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# #| code-line-numbers: \"|1|3|4\"\n#| \nset.seed(119)\n\nduke_forest %>%\n  specify(price ~ area)\n```\n\n::: {.cell-output-stdout}\n```\nResponse: price (numeric)\nExplanatory: area (numeric)\n# A tibble: 98 × 2\n     price  area\n     <dbl> <dbl>\n 1 1520000  6040\n 2 1030000  4475\n 3  420000  1745\n 4  680000  2091\n 5  428500  1772\n 6  456000  1950\n 7 1270000  3909\n 8  557450  2841\n 9  697500  3924\n10  650000  2173\n# … with 88 more rows\n```\n:::\n:::\n\n## Bootstrapping pipeline II\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# #| code-line-numbers: \"|5\"\n\nset.seed(119)\n\nduke_forest %>%\n  specify(price ~ area) %>%\n  generate(reps = 1000, type = \"bootstrap\")\n```\n\n::: {.cell-output-stdout}\n```\nResponse: price (numeric)\nExplanatory: area (numeric)\n# A tibble: 98,000 × 3\n# Groups:   replicate [1,000]\n   replicate   price  area\n       <int>   <dbl> <dbl>\n 1         1  535000  2334\n 2         1  520000  2637\n 3         1  540000  2165\n 4         1  155000  1620\n 5         1  567000  3931\n 6         1  420000  1745\n 7         1  400000  4769\n 8         1  579000  2926\n 9         1  615000  2203\n10         1 1030000  4475\n# … with 97,990 more rows\n```\n:::\n:::\n\n## Bootstrapping pipeline III\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# #| code-line-numbers: \"|6\"\n\nset.seed(119)\n\nduke_forest %>%\n  specify(price ~ area) %>%\n  generate(reps = 1000, type = \"bootstrap\") %>%\n  fit()\n```\n\n::: {.cell-output-stdout}\n```\n# A tibble: 2,000 × 3\n# Groups:   replicate [1,000]\n   replicate term      estimate\n       <int> <chr>        <dbl>\n 1         1 intercept  200401.\n 2         1 area          122.\n 3         2 intercept  120000.\n 4         2 area          156.\n 5         3 intercept  190879.\n 6         3 area          126.\n 7         4 intercept  206842.\n 8         4 area          127.\n 9         5 intercept  211231.\n10         5 area          124.\n# … with 1,990 more rows\n```\n:::\n:::\n\n## Bootstrapping pipeline IV\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# #| code-line-numbers: \"|3\"\n\nset.seed(119)\n\nboot_dist <- duke_forest %>%\n  specify(price ~ area) %>%\n  generate(reps = 1000, type = \"bootstrap\") %>%\n  fit()\n```\n:::\n\n## Visualize the bootstrap distribution\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# #| code-line-numbers: \"|2\"\n\nboot_dist %>%\n  filter(term == \"area\") %>%\n  ggplot(aes(x = estimate)) +\n  geom_histogram(binwidth = 10)\n```\n\n::: {.cell-output-display}\n![](lec-6_files/figure-revealjs/unnamed-chunk-8-1.png){fig-align='center' width=80%}\n:::\n:::\n\n## Compute the CI\n\nTwo methods:\n\n::: nonincremental\n-   Percentile method\n-   Standard error method\n:::\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](lec-6_files/figure-revealjs/unnamed-chunk-9-1.png){fig-align='center' width=80%}\n:::\n:::\n\n## But first...\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nobs_fit <- duke_forest %>%\n  specify(price ~ area) %>%\n  fit()\n\nobs_fit\n```\n\n::: {.cell-output-stdout}\n```\n# A tibble: 2 × 2\n  term      estimate\n  <chr>        <dbl>\n1 intercept  116652.\n2 area          159.\n```\n:::\n:::\n\n## Percentile method\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# #| code-line-numbers: \"|4\"\n\nboot_dist %>%\n  get_confidence_interval(\n    level = 0.95,\n    type = \"percentile\",\n    point_estimate = obs_fit\n  )\n```\n\n::: {.cell-output-stdout}\n```\n# A tibble: 2 × 3\n  term      lower_ci upper_ci\n  <chr>        <dbl>    <dbl>\n1 area          91.0     215.\n2 intercept -22046.   289004.\n```\n:::\n:::\n\n## Standard error method\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# #| code-line-numbers: \"|4\"\n\nboot_dist %>%\n  get_confidence_interval(\n    level = 0.95,\n    type = \"se\",\n    point_estimate = obs_fit\n  )\n```\n\n::: {.cell-output-stdout}\n```\n# A tibble: 2 × 3\n  term      lower_ci upper_ci\n  <chr>        <dbl>    <dbl>\n1 area          96.1     223.\n2 intercept -39805.   273109.\n```\n:::\n:::\n\n# Hypothesis test for the slope\n\n## Research question and hypotheses\n\n-   \"Do the data provide sufficient evidence that $\\beta_1$ (the true slope for the population) is different from 0?\"\n-   **Null hypothesis** - $H_0: \\beta_1 = 0$, there is no linear relationship between `area` and `price`\n-   **Alternative hypothesis** - $H_A: \\beta_1 \\ne 0$, there is a linear relationship between `area` and `price`\n\n## Hypothesis testing framework {.smaller}\n\n-   Start with a null hypothesis, $H_0$ that represents the status quo\n-   Set an alternative hypothesis, $H_A$ that represents the research question, i.e. what we're testing for\n-   Conduct a hypothesis test under the assumption that the null hypothesis is true and calculate a **p-value** (probability of observed or more extreme outcome given that the null hypothesis is true)\n    -   if the test results suggest that the data do not provide convincing evidence for the alternative hypothesis, stick with the null hypothesis\n    -   if they do, then reject the null hypothesis in favor of the alternative\n\n## Quantify the variability of the slope {.smaller}\n\n**for testing**\n\n-   Two approaches:\n    1.  Via simulation (what we'll review from lab)\n    2.  Via mathematical models (what we'll cover in the remainder of class)\n-   Randomizing to quantify the variability of the slope for the purpose of testing, under the assumption that the null hypothesis is true:\n    -   Simulate new samples from the original sample via permutation\n    -   Fit models to each of the samples and estimate the slope\n    -   Use features of the distribution of the permuted slopes to conduct a hypothesis test\n\n## Permutation, described {.smaller}\n\n::: columns\n::: {.column width=\"40%\"}\n-   Set the null hypothesis to be true, and measure the natural variability in the data due to sampling but **not** due to variables being correlated by permuting permute one variable to eliminate any existing relationship between the variables\n-   Each `price` value is randomly assigned to `area` of a given house, i.e. `area` and `price` are no longer matched for a given house\n:::\n\n::: {.column width=\"60%\"}\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-stdout}\n```\n# A tibble: 98 × 3\n   price_Observed price_Permuted  area\n            <dbl>          <dbl> <dbl>\n 1        1520000         342500  6040\n 2        1030000         750000  4475\n 3         420000         645000  1745\n 4         680000         697500  2091\n 5         428500         428500  1772\n 6         456000         481000  1950\n 7        1270000         610000  3909\n 8         557450         680000  2841\n 9         697500         485000  3924\n10         650000         105000  2173\n# … with 88 more rows\n```\n:::\n:::\n:::\n:::\n\n## Permutation, visualized\n\n::: columns\n::: {.column width=\"50%\"}\n-   Each of the observed values for `area` (and for `price`) exist in both the observed data plot as well as the permuted `price` plot\n-   The permutation removes the linear relationship between `area` and `price`\n:::\n\n::: {.column width=\"50%\"}\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](lec-6_files/figure-revealjs/unnamed-chunk-14-1.png){fig-align='center' width=100%}\n:::\n:::\n:::\n:::\n\n## Permutation, repeated\n\nRepeated permutations allow for quantifying the variability in the slope under the condition that there is no linear relationship (i.e., that the null hypothesis is true)\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](lec-6_files/figure-revealjs/unnamed-chunk-15-1.png){fig-align='center' width=80%}\n:::\n:::\n\n## Concluding the hypothesis test {.smaller}\n\n::: question\nIs the observed slope of $\\hat{\\beta_1} = 159$ (or an even more extreme slope) a likely outcome under the null hypothesis that $\\beta = 0$?\nWhat does this mean for our original question: \"Do the data provide sufficient evidence that $\\beta_1$ (the true slope for the population) is different from 0?\"\n:::\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](lec-6_files/figure-revealjs/unnamed-chunk-16-1.png){fig-align='center' width=60%}\n:::\n:::\n\n## Permutation pipeline I\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# #| code-line-numbers: \"|1|3|4\"\n#| \nset.seed(1125)\n\nduke_forest %>%\n  specify(price ~ area)\n```\n\n::: {.cell-output-stdout}\n```\nResponse: price (numeric)\nExplanatory: area (numeric)\n# A tibble: 98 × 2\n     price  area\n     <dbl> <dbl>\n 1 1520000  6040\n 2 1030000  4475\n 3  420000  1745\n 4  680000  2091\n 5  428500  1772\n 6  456000  1950\n 7 1270000  3909\n 8  557450  2841\n 9  697500  3924\n10  650000  2173\n# … with 88 more rows\n```\n:::\n:::\n\n## Permutation pipeline II\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# #| code-line-numbers: \"|5\"\n\nset.seed(1125)\n\nduke_forest %>%\n  specify(price ~ area) %>%\n  hypothesize(null = \"independence\")\n```\n\n::: {.cell-output-stdout}\n```\nResponse: price (numeric)\nExplanatory: area (numeric)\nNull Hypothesis: independence\n# A tibble: 98 × 2\n     price  area\n     <dbl> <dbl>\n 1 1520000  6040\n 2 1030000  4475\n 3  420000  1745\n 4  680000  2091\n 5  428500  1772\n 6  456000  1950\n 7 1270000  3909\n 8  557450  2841\n 9  697500  3924\n10  650000  2173\n# … with 88 more rows\n```\n:::\n:::\n\n## Permutation pipeline III\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# #| code-line-numbers: \"|6\"\n\nset.seed(1125)\n\nduke_forest %>%\n  specify(price ~ area) %>%\n  hypothesize(null = \"independence\") %>%\n  generate(reps = 1000, type = \"permute\")\n```\n\n::: {.cell-output-stdout}\n```\nResponse: price (numeric)\nExplanatory: area (numeric)\nNull Hypothesis: independence\n# A tibble: 98,000 × 3\n# Groups:   replicate [1,000]\n     price  area replicate\n     <dbl> <dbl>     <int>\n 1  465000  6040         1\n 2  481000  4475         1\n 3 1020000  1745         1\n 4  520000  2091         1\n 5  592000  1772         1\n 6  650000  1950         1\n 7  473000  3909         1\n 8  705000  2841         1\n 9  785000  3924         1\n10  671500  2173         1\n# … with 97,990 more rows\n```\n:::\n:::\n\n## Permutation pipeline IV\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# #| code-line-numbers: \"|7\"\n\nset.seed(1125)\n\nduke_forest %>%\n  specify(price ~ area) %>%\n  hypothesize(null = \"independence\") %>%\n  generate(reps = 1000, type = \"permute\") %>%\n  fit()\n```\n\n::: {.cell-output-stdout}\n```\n# A tibble: 2,000 × 3\n# Groups:   replicate [1,000]\n   replicate term       estimate\n       <int> <chr>         <dbl>\n 1         1 intercept 553355.  \n 2         1 area           2.35\n 3         2 intercept 635824.  \n 4         2 area         -27.3 \n 5         3 intercept 536072.  \n 6         3 area           8.57\n 7         4 intercept 598649.  \n 8         4 area         -13.9 \n 9         5 intercept 556202.  \n10         5 area           1.33\n# … with 1,990 more rows\n```\n:::\n:::\n\n## Permutation pipeline V\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# #| code-line-numbers: \"|3\"\n\nset.seed(1125)\n\nnull_dist <- duke_forest %>%\n  specify(price ~ area) %>%\n  hypothesize(null = \"independence\") %>%\n  generate(reps = 1000, type = \"permute\") %>%\n  fit()\n```\n:::\n\n## Visualize the null distribution\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# #| code-line-numbers: \"|2\"\n\nnull_dist %>%\n  filter(term == \"area\") %>%\n  ggplot(aes(x = estimate)) +\n  geom_histogram(binwidth = 10, color = \"white\")\n```\n\n::: {.cell-output-display}\n![](lec-6_files/figure-revealjs/unnamed-chunk-22-1.png){fig-align='center' width=80%}\n:::\n:::\n\n## Reason around the p-value {.smaller}\n\n::: question\nIn a world where the there is no relationship between the area of a Duke Forest house and in its price ($\\beta_1 = 0$), what is the probability that we observe a sample of 98 houses where the slope fo the model predicting price from area is 159 or even more extreme?\n:::\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](lec-6_files/figure-revealjs/unnamed-chunk-23-1.png){fig-align='center' width=80%}\n:::\n:::\n\n## Compute the p-value\n\n::: question\nWhat does this warning mean?\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nget_p_value(\n  null_dist,\n  obs_stat = obs_fit,\n  direction = \"two-sided\"\n)\n```\n\n::: {.cell-output-stderr}\n```\nWarning: Please be cautious in reporting a p-value of 0. This result is an\napproximation based on the number of `reps` chosen in the `generate()` step. See\n`?get_p_value()` for more information.\n\nWarning: Please be cautious in reporting a p-value of 0. This result is an\napproximation based on the number of `reps` chosen in the `generate()` step. See\n`?get_p_value()` for more information.\n```\n:::\n\n::: {.cell-output-stdout}\n```\n# A tibble: 2 × 2\n  term      p_value\n  <chr>       <dbl>\n1 area            0\n2 intercept       0\n```\n:::\n:::\n\n# Mathematical models for inference\n\n## The regression model, revisited\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndf_fit <- linear_reg() %>%\n  set_engine(\"lm\") %>%\n  fit(price ~ area, data = duke_forest)\n\ntidy(df_fit) %>%\n  kable(digits = 3)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> term </th>\n   <th style=\"text-align:right;\"> estimate </th>\n   <th style=\"text-align:right;\"> std.error </th>\n   <th style=\"text-align:right;\"> statistic </th>\n   <th style=\"text-align:right;\"> p.value </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> (Intercept) </td>\n   <td style=\"text-align:right;\"> 116652.325 </td>\n   <td style=\"text-align:right;\"> 53302.463 </td>\n   <td style=\"text-align:right;\"> 2.188 </td>\n   <td style=\"text-align:right;\"> 0.031 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> area </td>\n   <td style=\"text-align:right;\"> 159.483 </td>\n   <td style=\"text-align:right;\"> 18.171 </td>\n   <td style=\"text-align:right;\"> 8.777 </td>\n   <td style=\"text-align:right;\"> 0.000 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n## HT and CI, recapped {.smaller}\n\n-   **Hypothesis test:**\n\n    ::: nonincremental\n    -   Do the data provide sufficient evidence that $\\beta_1$ (the true slope for the population) is different from 0?\n    -   Null hypothesis - $H_0: \\beta_1 = 0$, there is no linear relationship between `area` and `price`.\n    -   Alternative hypothesis - $H_A: \\beta_1 \\ne 0$, there is a linear relationship between `area` and `price`.\n    :::\n\n-   **Confidence interval:** Provide a plausible range of values for $\\beta_1$ at a given confidence level.\n\n## HT and CI, revisited {.smaller}\n\n-   Earlier we computed a CI and conducted a HT via simulation:\n    -   CI: Bootstrap the observed sample to simulate the distribution of the slope\n    -   HT: Permute the observed sample to simulate the distribution of the slope under the assumption that the null hypothesis is true\n-   Now we'll do these based on theoretical results, i.e., by using the Central Limit Theorem to define the distribution of the slope and use features (shape, center, spread) of this distribution to compute bounds of the CI and the p-value for the HT\n\n## Mathematical representation of the model {.smaller}\n\n$$\n\\begin{aligned}\nY &= Model + Error \\\\\n&= f(X) + \\epsilon \\\\\n&= \\mu_{Y|X} + \\epsilon \\\\\n&= \\beta_0 + \\beta_1 X + \\epsilon\n\\end{aligned}\n$$\n\nwhere the errors are independent and normally distributed:\n\n-   independent: Knowing the error term for one observation doesn't tell you anything about the error term for another observation\n-   normally distributed: $\\epsilon \\sim N(0, \\sigma_\\epsilon^2)$\n\n## Mathematical representation, visualized {.smaller}\n\n$$\nY|X \\sim N(\\beta_0 + \\beta_1 X, \\sigma_\\epsilon^2)\n$$\n\n::: columns\n::: {.column width=\"70%\"}\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](lec-6_files/figure-revealjs/unnamed-chunk-26-1.png){fig-align='center' width=100%}\n:::\n:::\n:::\n\n::: {.column width=\"30%\"}\n-   Mean: $\\beta_0 + \\beta_1 X$, the predicted value based on the regression model\n-   Variance: $\\sigma_\\epsilon^2$, constant across the range of $X$\n    -   How do we estimate $\\sigma_\\epsilon^2$?\n:::\n:::\n\n## Regression standard error {.smaller}\n\nOnce we fit the model, we can use the residuals to estimate the regression standard error (the spread of the distribution of the response, for a given value of the predictor variable):\n\n$$\n\\hat{\\sigma}_\\epsilon = \\sqrt{\\frac{\\sum_\\limits{i=1}^n(y_i - \\hat{y}_i)^2}{n-2}} = \\sqrt{\\frac{\\sum_\\limits{i=1}^ne_i^2}{n-2}}\n$$\n\n. . .\n\n::: question\n::: nonincremental\n1.  Why divide by $n - 2$?\n2.  Why do we care about the value of the regression standard error?\n:::\n:::\n\n## Standard error of $\\hat{\\beta}_1$\n\n$$\nSE_{\\hat{\\beta}_1} = \\hat{\\sigma}_\\epsilon\\sqrt{\\frac{1}{(n-1)s_X^2}}\n$$\n\n. . .\n\nor...\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> term </th>\n   <th style=\"text-align:right;\"> estimate </th>\n   <th style=\"text-align:right;\"> std.error </th>\n   <th style=\"text-align:right;\"> statistic </th>\n   <th style=\"text-align:right;\"> p.value </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> (Intercept) </td>\n   <td style=\"text-align:right;\"> 116652.33 </td>\n   <td style=\"text-align:right;\"> 53302.46 </td>\n   <td style=\"text-align:right;\"> 2.19 </td>\n   <td style=\"text-align:right;\"> 0.03 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;background-color: #D9E3E4 !important;\"> area </td>\n   <td style=\"text-align:right;background-color: #D9E3E4 !important;\"> 159.48 </td>\n   <td style=\"text-align:right;background-color: #D9E3E4 !important;\"> 18.17 </td>\n   <td style=\"text-align:right;background-color: #D9E3E4 !important;\"> 8.78 </td>\n   <td style=\"text-align:right;background-color: #D9E3E4 !important;\"> 0.00 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::",
    "supporting": [
      "lec-6_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    function fireSlideChanged(previousSlide, currentSlide) {\n\n      // dispatch for htmlwidgets\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for reveal\n    if (window.Reveal) {\n      window.Reveal.addEventListener(\"slidechanged\", function(event) {\n        fireSlideChanged(event.previousSlide, event.currentSlide);\n      });\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": null
  }
}