{
  "hash": "8918fc1e15ab4c9d7b8a04e3302f7b35",
  "result": {
    "markdown": "---\ntitle: \"Feature engineering\"\nsubtitle: \"STA 210 - Spring 2022\"\nauthor: \"Dr. Mine Çetinkaya-Rundel\"\nfooter: \"[sta210-s22.github.io/website](https://sta210-s22.github.io/website/)\"\nlogo: \"images/logo.png\"\nformat: \n  revealjs:\n    theme: slides.scss\n    multiplex: true\n    transition: fade\n    slide-number: true\n    incremental: true \n    chalkboard: true\neditor: visual\nexecute:\n  freeze: auto\n---\n\n\n\n# Welcome\n\n## Announcements\n\n::: nonincremental\n-   Check Sakai Gradebook to make sure all scores so far are accurate\n-   Any questions on topic selection for projects?\n-   Any feedback on time of my office hours?\n:::\n\n## Midterm evaluation summary\n\n*Live analysis...*\n\n## Topics\n\n::: nonincremental\n-   Review: Training and testing splits\n-   Feature engineering with recipes\n:::\n\n## Computational setup\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# load packages\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(gghighlight)\nlibrary(knitr)\n\n# set default theme and larger font size for ggplot2\nggplot2::theme_set(ggplot2::theme_minimal(base_size = 20))\n```\n:::\n\n# Introduction\n\n## The Office\n\n![](images/lec-12/the-office.jpeg)\n\n## Data\n\nThe data come from [data.world](https://data.world/anujjain7/the-office-imdb-ratings-dataset), by way of [TidyTuesday](https://github.com/rfordatascience/tidytuesday/blob/master/data/2020/2020-03-17/readme.md)\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\noffice_ratings <- read_csv(here::here(\"slides\", \"data/office_ratings.csv\"))\noffice_ratings\n```\n\n::: {.cell-output-stdout}\n```\n# A tibble: 188 × 6\n   season episode title             imdb_rating total_votes air_date  \n    <dbl>   <dbl> <chr>                   <dbl>       <dbl> <date>    \n 1      1       1 Pilot                     7.6        3706 2005-03-24\n 2      1       2 Diversity Day             8.3        3566 2005-03-29\n 3      1       3 Health Care               7.9        2983 2005-04-05\n 4      1       4 The Alliance              8.1        2886 2005-04-12\n 5      1       5 Basketball                8.4        3179 2005-04-19\n 6      1       6 Hot Girl                  7.8        2852 2005-04-26\n 7      2       1 The Dundies               8.7        3213 2005-09-20\n 8      2       2 Sexual Harassment         8.2        2736 2005-09-27\n 9      2       3 Office Olympics           8.4        2742 2005-10-04\n10      2       4 The Fire                  8.4        2713 2005-10-11\n# … with 178 more rows\n```\n:::\n:::\n\n## IMDB ratings\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](lec-12_files/figure-revealjs/unnamed-chunk-4-1.png){fig-align='center' width=90%}\n:::\n:::\n\n## IMDB ratings vs. number of votes\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](lec-12_files/figure-revealjs/unnamed-chunk-5-1.png){fig-align='center' width=90%}\n:::\n:::\n\n## Outliers\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](lec-12_files/figure-revealjs/unnamed-chunk-6-1.png){fig-align='center' width=90%}\n:::\n:::\n\n## Aside...\n\nIf you like the [Dinner Party](https://www.imdb.com/title/tt1031477/) episode, I highly recommend this [\"oral history\" of the episode](https://www.rollingstone.com/tv/tv-features/that-one-night-the-oral-history-of-the-greatest-office-episode-ever-629472/) published on Rolling Stone magazine.\n\n## Rating vs. air date\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](lec-12_files/figure-revealjs/unnamed-chunk-7-1.png){fig-align='center' width=90%}\n:::\n:::\n\n## IMDB ratings vs. seasons\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](lec-12_files/figure-revealjs/unnamed-chunk-8-1.png){fig-align='center' width=90%}\n:::\n:::\n\n# Modeling\n\n## Train / test\n\n**Step 1:** Create an initial split:\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nset.seed(123)\noffice_split <- initial_split(office_ratings) # prop = 3/4 by default\n```\n:::\n\n. . .\n\n<br>\n\n**Step 2:** Save training data\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\noffice_train <- training(office_split)\ndim(office_train)\n```\n\n::: {.cell-output-stdout}\n```\n[1] 141   6\n```\n:::\n:::\n\n. . .\n\n<br>\n\n**Step 3:** Save testing data\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\noffice_test  <- testing(office_split)\ndim(office_test)\n```\n\n::: {.cell-output-stdout}\n```\n[1] 47  6\n```\n:::\n:::\n\n## Training data\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\noffice_train\n```\n\n::: {.cell-output-stdout}\n```\n# A tibble: 141 × 6\n   season episode title               imdb_rating total_votes air_date  \n    <dbl>   <dbl> <chr>                     <dbl>       <dbl> <date>    \n 1      8      18 Last Day in Florida         7.8        1429 2012-03-08\n 2      9      14 Vandalism                   7.6        1402 2013-01-31\n 3      2       8 Performance Review          8.2        2416 2005-11-15\n 4      9       5 Here Comes Treble           7.1        1515 2012-10-25\n 5      3      22 Beach Games                 9.1        2783 2007-05-10\n 6      7       1 Nepotism                    8.4        1897 2010-09-23\n 7      3      15 Phyllis' Wedding            8.3        2283 2007-02-08\n 8      9      21 Livin' the Dream            8.9        2041 2013-05-02\n 9      9      18 Promos                      8          1445 2013-04-04\n10      8      12 Pool Party                  8          1612 2012-01-19\n# … with 131 more rows\n```\n:::\n:::\n\n## Feature engineering\n\n-   We prefer simple models when possible, but **parsimony** does not mean sacrificing accuracy (or predictive performance) in the interest of simplicity\n\n-   Variables that go into the model and how they are represented are just as critical to success of the model\n\n-   **Feature engineering** allows us to get creative with our predictors in an effort to make them more useful for our model (to increase its predictive performance)\n\n## Feature engineering with dplyr\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\noffice_train %>%\n  mutate(\n    season = as_factor(season),\n    month = lubridate::month(air_date),\n    wday = lubridate::wday(air_date)\n  )\n```\n\n::: {.cell-output-stdout}\n```\n# A tibble: 141 × 8\n  season episode title            imdb_rating total_votes air_date   month  wday\n  <fct>    <dbl> <chr>                  <dbl>       <dbl> <date>     <dbl> <dbl>\n1 8           18 Last Day in Flo…         7.8        1429 2012-03-08     3     5\n2 9           14 Vandalism                7.6        1402 2013-01-31     1     5\n3 2            8 Performance Rev…         8.2        2416 2005-11-15    11     3\n4 9            5 Here Comes Treb…         7.1        1515 2012-10-25    10     5\n5 3           22 Beach Games              9.1        2783 2007-05-10     5     5\n6 7            1 Nepotism                 8.4        1897 2010-09-23     9     5\n# … with 135 more rows\n```\n:::\n:::\n\n. . .\n\n::: question\nCan you identify any potential problems with this approach?\n:::\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n## Modeling workflow, revisited\n\n-   Create a **recipe** for feature engineering steps to be applied to the training data\n\n-   Fit the model to the training data after these steps have been applied\n\n-   Using the model estimates from the training data, predict outcomes for the test data\n\n-   Evaluate the performance of the model on the test data\n\n# Building recipes\n\n## Initiate a recipe\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"|2|3\"}\noffice_rec <- recipe(\n  imdb_rating ~ .,    # formula\n  data = office_train # data for cataloguing names and types of variables\n  )\n\noffice_rec\n```\n\n::: {.cell-output-stdout}\n```\nRecipe\n\nInputs:\n\n      role #variables\n   outcome          1\n predictor          5\n```\n:::\n:::\n\n## Step 1: Alter roles\n\n`title` isn't a predictor, but we might want to keep it around as an ID\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"|2\"}\noffice_rec <- office_rec %>%\n  update_role(title, new_role = \"ID\")\n\noffice_rec\n```\n\n::: {.cell-output-stdout}\n```\nRecipe\n\nInputs:\n\n      role #variables\n        ID          1\n   outcome          1\n predictor          4\n```\n:::\n:::\n\n## Step 2: Add features\n\nNew features for day of week and month\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"|2\"}\noffice_rec <- office_rec %>%\n  step_date(air_date, features = c(\"dow\", \"month\"))\n\noffice_rec\n```\n\n::: {.cell-output-stdout}\n```\nRecipe\n\nInputs:\n\n      role #variables\n        ID          1\n   outcome          1\n predictor          4\n\nOperations:\n\nDate features from air_date\n```\n:::\n:::\n\n## Step 3: Add more features {.smaller}\n\nIdentify holidays in `air_date`, then remove `air_date`\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"|2,3,4,5,6\"}\noffice_rec <- office_rec %>%\n  step_holiday(\n    air_date, \n    holidays = c(\"USThanksgivingDay\", \"USChristmasDay\", \"USNewYearsDay\", \"USIndependenceDay\"), \n    keep_original_cols = FALSE\n  )\n\noffice_rec\n```\n\n::: {.cell-output-stdout}\n```\nRecipe\n\nInputs:\n\n      role #variables\n        ID          1\n   outcome          1\n predictor          4\n\nOperations:\n\nDate features from air_date\nHoliday features from air_date\n```\n:::\n:::\n\n## Step 4: Convert numbers to factors {.smaller}\n\nConvert `season` to factor\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"|2\"}\noffice_rec <- office_rec %>%\n  step_num2factor(season, levels = as.character(1:9))\n\noffice_rec\n```\n\n::: {.cell-output-stdout}\n```\nRecipe\n\nInputs:\n\n      role #variables\n        ID          1\n   outcome          1\n predictor          4\n\nOperations:\n\nDate features from air_date\nHoliday features from air_date\nFactor variables from season\n```\n:::\n:::\n\n## Step 5: Make dummy variables {.smaller}\n\nConvert all nominal (categorical) predictors to factors\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"|2\"}\noffice_rec <- office_rec %>%\n  step_dummy(all_nominal_predictors())\n\noffice_rec\n```\n\n::: {.cell-output-stdout}\n```\nRecipe\n\nInputs:\n\n      role #variables\n        ID          1\n   outcome          1\n predictor          4\n\nOperations:\n\nDate features from air_date\nHoliday features from air_date\nFactor variables from season\nDummy variables from all_nominal_predictors()\n```\n:::\n:::\n\n## Step 6: Remove zero variance pred.s {.smaller}\n\nRemove all predictors that contain only a single value\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"|2\"}\noffice_rec <- office_rec %>%\n  step_zv(all_predictors())\n\noffice_rec\n```\n\n::: {.cell-output-stdout}\n```\nRecipe\n\nInputs:\n\n      role #variables\n        ID          1\n   outcome          1\n predictor          4\n\nOperations:\n\nDate features from air_date\nHoliday features from air_date\nFactor variables from season\nDummy variables from all_nominal_predictors()\nZero variance filter on all_predictors()\n```\n:::\n:::\n\n## Putting it altogether {.smaller}\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\noffice_rec <- recipe(imdb_rating ~ ., data = office_train) %>%\n  # make title's role ID\n  update_role(title, new_role = \"ID\") %>%\n  # extract day of week and month of air_date\n  step_date(air_date, features = c(\"dow\", \"month\")) %>%\n  # identify holidays and add indicators\n  step_holiday(\n    air_date, \n    holidays = c(\"USThanksgivingDay\", \"USChristmasDay\", \"USNewYearsDay\", \"USIndependenceDay\"), \n    keep_original_cols = FALSE\n  ) %>%\n  # turn season into factor\n  step_num2factor(season, levels = as.character(1:9)) %>%\n  # make dummy variables\n  step_dummy(all_nominal_predictors()) %>%\n  # remove zero variance predictors\n  step_zv(all_predictors())\n```\n:::\n\n## Putting it altogether\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\noffice_rec\n```\n\n::: {.cell-output-stdout}\n```\nRecipe\n\nInputs:\n\n      role #variables\n        ID          1\n   outcome          1\n predictor          4\n\nOperations:\n\nDate features from air_date\nHoliday features from air_date\nFactor variables from season\nDummy variables from all_nominal_predictors()\nZero variance filter on all_predictors()\n```\n:::\n:::\n\n## Recap\n\n::: nonincremental\n-   Review: Training and testing splits\n-   Feature engineering with recipes\n:::",
    "supporting": [
      "lec-12_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    function fireSlideChanged(previousSlide, currentSlide) {\n\n      // dispatch for htmlwidgets\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for reveal\n    if (window.Reveal) {\n      window.Reveal.addEventListener(\"slidechanged\", function(event) {\n        fireSlideChanged(event.previousSlide, event.currentSlide);\n      });\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": null
  }
}