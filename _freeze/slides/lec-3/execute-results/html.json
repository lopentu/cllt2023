{
  "hash": "f04d4e2f6cb8006c6478c47f02160938",
  "result": {
    "markdown": "---\ntitle: \"SLR: Model fitting in R with tidymodels\"\nsubtitle: \"STA 210 - Spring 2022\"\nauthor: \"Dr. Mine Ã‡etinkaya-Rundel\"\nfooter:  \"[sta210-s22.github.io/website](https://sta210-s22.github.io/website/)\"\nlogo: \"images/logo.png\"\nformat: \n  revealjs: \n    theme: slides.scss\n    multiplex: true\n    transition: fade\n    slide-number: true\neditor: visual\nexecute:\n  freeze: auto\n---\n\n\n\n# Welcome\n\n## Announcements\n\n-   If you're just joining the class, welcome! Go to the [course website](https://sta210-s22.github.io/website) and review content you've missed, read the syllabus, and complete the *Getting to know you* survey.\n-   Lab 1 is due Friday, at 5pm, on Gradescope.\n\n## Recap of last lecture {.smaller}\n\n::: incremental\n-   Used simple linear regression to describe the relationship between a quantitative predictor and quantitative outcome variable.\n\n-   Used the least squares method to estimate the slope and intercept.\n\n-   We interpreted the slope and intercept.\n\n    ::: incremental\n    -   **Slope:** For every one unit increase in $x$, we expect y to be higher/lower by $\\hat{\\beta}_1$ units, on average.\n    -   **Intercept:** If $x$ is 0, then we expect $y$ to be $\\hat{\\beta}_0$ units.\n    :::\n\n-   Predicted the response given a value of the predictor variable.\n\n-   Defined extrapolation and why we should avoid it.\n:::\n\n## Interested in the math behind it all?\n\nSee the supplemental notes on [Deriving the Least-Squares Estimates for Simple Linear Regression](/supplemental/slr-derivations.html) for more mathematical details on the derivations of the estimates of $\\beta_0$ and $\\beta_1$.\n\n## Outline\n\n-   Use tidymodels to fit and summarize regression models in R\n-   Complete an application exercise on exploratory data analysis and modeling\n\n## Computational setup\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# load packages\nlibrary(tidyverse)       # for data wrangling\nlibrary(tidymodels)      # for modeling\nlibrary(fivethirtyeight) # for the fandango dataset\n\n# set default theme and larger font size for ggplot2\nggplot2::theme_set(ggplot2::theme_minimal(base_size = 16))\n\n# set default figure parameters for knitr\nknitr::opts_chunk$set(\n  fig.width = 8,\n  fig.asp = 0.618,\n  fig.retina = 3,\n  dpi = 300,\n  out.width = \"80%\"\n)\n```\n:::\n\n# Data\n\n## Movie ratings\n\n::: columns\n::: {.column width=\"70%\"}\n-   Data behind the FiveThirtyEight story [*Be Suspicious Of Online Movie Ratings, Especially Fandango's*](%22Be%20Suspicious%20Of%20Online%20Movie%20Ratings,%20Especially%20Fandango's%22)\n-   In the **fivethirtyeight** package: [`fandango`](https://fivethirtyeight-r.netlify.app/reference/fandango.html)\n-   Contains every film that has at least 30 fan reviews on Fandango, an IMDb score, Rotten Tomatoes critic and user ratings, and Metacritic critic and user scores\n:::\n\n::: {.column width=\"30%\"}\n![](images/lec-2/fandango.png){fig-alt=\"Fandango logo\" width=\"200\"}\n\n![](images/lec-2/imdb.png){fig-alt=\"IMDB logo\" width=\"200\"}\n\n![](images/lec-2/rotten-tomatoes.png){fig-alt=\"Rotten Tomatoes logo\" width=\"200\"}\n\n![](images/lec-2/metacritic.png){fig-alt=\"Metacritic logo\" width=\"200\"}\n:::\n:::\n\n## Data prep\n\n-   Rename Rotten Tomatoes columns as `critics` and `audience`\n-   Rename the dataset as `movie_scores`\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmovie_scores <- fandango %>%\n  rename(\n    critics = rottentomatoes, \n    audience = rottentomatoes_user\n  )\n```\n:::\n\n## Data visualization\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](lec-3_files/figure-revealjs/unnamed-chunk-1-1.png){fig-align='center' width=80%}\n:::\n:::\n\n# Using R for SLR\n\n## Step 1: Specify model\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlinear_reg()\n```\n\n::: {.cell-output-stdout}\n```\nLinear Regression Model Specification (regression)\n\nComputational engine: lm \n```\n:::\n:::\n\n## Step 2: **Set model fitting *engine***\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# #| code-line-numbers: \"|2\"\n\nlinear_reg() %>%\n  set_engine(\"lm\") # lm: linear model\n```\n\n::: {.cell-output-stdout}\n```\nLinear Regression Model Specification (regression)\n\nComputational engine: lm \n```\n:::\n:::\n\n## Step 3: Fit model & estimate parameters\n\nusing **formula syntax**\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# #| code-line-numbers: \"|3\"\n\nlinear_reg() %>%\n  set_engine(\"lm\") %>%\n  fit(audience ~ critics, data = movie_scores)\n```\n\n::: {.cell-output-stdout}\n```\nparsnip model object\n\nFit time:  4ms \n\nCall:\nstats::lm(formula = audience ~ critics, data = data)\n\nCoefficients:\n(Intercept)      critics  \n    32.3155       0.5187  \n```\n:::\n:::\n\n## A closer look at model output\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmovie_fit <- linear_reg() %>%\n  set_engine(\"lm\") %>%\n  fit(audience ~ critics, data = movie_scores)\n\nmovie_fit\n```\n\n::: {.cell-output-stdout}\n```\nparsnip model object\n\nFit time:  2ms \n\nCall:\nstats::lm(formula = audience ~ critics, data = data)\n\nCoefficients:\n(Intercept)      critics  \n    32.3155       0.5187  \n```\n:::\n:::\n\n$$\\widehat{\\text{audience}} = 32.3155 + 0.5187 \\times \\text{critics}$$\n\n. . .\n\n**Note:** The intercept is off by a tiny bit from the hand-calculated intercept, this is likely just rounding error in the hand calculation.\n\n## The regression output\n\nWe'll focus on the first column for now...\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# #| code-line-numbers: \"|4\"\n\nlinear_reg() %>%\n  set_engine(\"lm\") %>%\n  fit(audience ~ critics, data = movie_scores) %>%\n  tidy()\n```\n\n::: {.cell-output-stdout}\n```\n# A tibble: 2 Ã— 5\n  term        estimate std.error statistic  p.value\n  <chr>          <dbl>     <dbl>     <dbl>    <dbl>\n1 (Intercept)   32.3      2.34        13.8 4.03e-28\n2 critics        0.519    0.0345      15.0 2.70e-31\n```\n:::\n:::\n\n## Prediction\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# #| code-line-numbers: \"|2|5\"\n\n# create a data frame for a new movie\nnew_movie <- tibble(critics = 50)\n\n# predict the outcome for a new movie\npredict(movie_fit, new_movie)\n```\n\n::: {.cell-output-stdout}\n```\n# A tibble: 1 Ã— 1\n  .pred\n  <dbl>\n1  58.2\n```\n:::\n:::\n\n# Application exercise\n\n::: appex\nðŸ“‹ [github.com/sta210-s22/ae-1-dcbikeshare](https://github.com/sta210-s22/ae-1-dcbikeshare)\n:::\n\nfollowed by a demo of exporting your work and uploading to GradeScope\n\n# Recap\n\n-   Used tidymodels to fit and summarize regression models in R\n-   Completed an application exercise on exploratory data analysis and modeling",
    "supporting": [
      "lec-3_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    function fireSlideChanged(previousSlide, currentSlide) {\n\n      // dispatch for htmlwidgets\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for reveal\n    if (window.Reveal) {\n      window.Reveal.addEventListener(\"slidechanged\", function(event) {\n        fireSlideChanged(event.previousSlide, event.currentSlide);\n      });\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": null
  }
}