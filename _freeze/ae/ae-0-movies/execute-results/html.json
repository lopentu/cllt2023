{
  "hash": "ba98c6c092c491581557ff1d5257f5ab",
  "result": {
    "markdown": "---\ntitle: \"Movie budgets and revenues\"\neditor: visual\n---\n\n::: callout-important\nThis application exercise is a demo only.\nYou do not have a corresponding repository for it and you're not expected to turn in anything for it.\n:::\n\nWe will look at the relationship between budget and revenue for movies made in the United States in 1986 to 2020.\nThe dataset is created based on data from the [Internet Movie Database (IMDB)](https://www.imdb.com/).\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse) # for data analysis and visualisation\nlibrary(scales)    # for pretty axis labels\nlibrary(DT)        # for interactive table\n```\n:::\n\n## Data\n\nThe `movies` data set includes basic information about each movie including budget, genre, movie studio, director, etc.\nA full list of the variables may be found [here](https://github.com/danielgrijalva/movie-stats).\n\n::: {.cell}\n\n```{.r .cell-code}\nmovies <- read_csv(\"https://raw.githubusercontent.com/danielgrijalva/movie-stats/master/movies.csv\")\n```\n:::\n\nView the first 10 rows of data.\n\n::: {.cell}\n\n```{.r .cell-code}\nmovies\n```\n\n::: {.cell-output-stdout}\n```\n# A tibble: 7,668 × 15\n   name   rating genre  year released score  votes director writer star  country\n   <chr>  <chr>  <chr> <dbl> <chr>    <dbl>  <dbl> <chr>    <chr>  <chr> <chr>  \n 1 The S… R      Drama  1980 June 13…   8.4 9.27e5 Stanley… Steph… Jack… United…\n 2 The B… R      Adve…  1980 July 2,…   5.8 6.5 e4 Randal … Henry… Broo… United…\n 3 Star … PG     Acti…  1980 June 20…   8.7 1.2 e6 Irvin K… Leigh… Mark… United…\n 4 Airpl… PG     Come…  1980 July 2,…   7.7 2.21e5 Jim Abr… Jim A… Robe… United…\n 5 Caddy… R      Come…  1980 July 25…   7.3 1.08e5 Harold … Brian… Chev… United…\n 6 Frida… R      Horr…  1980 May 9, …   6.4 1.23e5 Sean S.… Victo… Bets… United…\n 7 The B… R      Acti…  1980 June 20…   7.9 1.88e5 John La… Dan A… John… United…\n 8 Ragin… R      Biog…  1980 Decembe…   8.2 3.3 e5 Martin … Jake … Robe… United…\n 9 Super… PG     Acti…  1980 June 19…   6.8 1.01e5 Richard… Jerry… Gene… United…\n10 The L… R      Biog…  1980 May 16,…   7   1   e4 Walter … Bill … Davi… United…\n# … with 7,658 more rows, and 4 more variables: budget <dbl>, gross <dbl>,\n#   company <chr>, runtime <dbl>\n```\n:::\n:::\n\nThe \\_\\_\\_ dataset has \\_\\_\\_ observations and \\_\\_\\_ variables.\n\n## Analysis\n\n### Gross over time\n\nWe begin by looking at how the average gross revenue (`gross`) has changed over time.\nSince we want to visualize the results, we will choose a few genres of interest for the analysis.\n\n::: {.cell}\n\n```{.r .cell-code}\ngenre_list <- c(\"Comedy\", \"Action\", \"Animation\", \"Horror\")\n```\n:::\n\nThen, we will filter for these genres and visualize the average gross revenue over time.\n\n::: {.cell}\n\n```{.r .cell-code}\nmovies %>%\n  filter(genre %in% genre_list) %>% \n  group_by(genre,year) %>%\n  summarise(avg_gross = mean(gross)) %>%\n  ggplot(mapping = aes(x = year, y = avg_gross, color= genre)) +\n    geom_point() + \n    geom_line() +\n    scale_color_viridis_d() +\n    scale_y_continuous(labels = label_dollar()) +\n    labs(\n      x = \"Year\",\n      y = \"Average Gross Revenue (US Dollars)\",\n      color = \"Genre\",\n      title = \"Gross Revenue Over Time\"\n    )\n```\n\n::: {.cell-output-stderr}\n```\n`summarise()` has grouped output by 'genre'. You can override using the\n`.groups` argument.\n```\n:::\n\n::: {.cell-output-stderr}\n```\nWarning: Removed 47 rows containing missing values (geom_point).\n```\n:::\n\n::: {.cell-output-stderr}\n```\nWarning: Removed 23 row(s) containing missing values (geom_path).\n```\n:::\n\n::: {.cell-output-display}\n![](ae-0-movies_files/figure-html/plot-rating-1.png){width=672}\n:::\n:::\n\nThe plot suggests ...\n\n### Budget and gross\n\nNext, let's see the relationship between a movie's budget and its gross revenue.\n\n::: {.cell}\n\n```{.r .cell-code}\nmovies %>%\n  filter(genre %in% genre_list, budget > 0) %>% \n  ggplot(mapping = aes(x=log(budget), y = log(gross), color=genre)) +\n  geom_point(alpha = 0.6) +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  facet_wrap(~ genre) + \n  scale_color_viridis_d() +\n  labs(\n    x = \"Log-transformed Budget\",\n    y = \"Log-transformed Gross Revenue\"\n  )\n```\n\n::: {.cell-output-stderr}\n```\n`geom_smooth()` using formula 'y ~ x'\n```\n:::\n\n::: {.cell-output-stderr}\n```\nWarning: Removed 35 rows containing non-finite values (stat_smooth).\n```\n:::\n\n::: {.cell-output-stderr}\n```\nWarning: Removed 35 rows containing missing values (geom_point).\n```\n:::\n\n::: {.cell-output-display}\n![](ae-0-movies_files/figure-html/plot-revenue-1.png){width=672}\n:::\n:::\n\n## Exercises\n\n1.  Suppose we fit a regression model for each genre that uses budget to predict gross revenue.\n    What are the signs of the correlation between `budget` and `gross` and the slope in each regression equation?\n\n2.  Suppose we fit the regression model from the previous question.\n    Which genre would you expect to have the smallest residuals, on average (*residual = observed revenue - predicted revenue*)?\n\n3.  In the remaining time, discuss the following: Notice in the graph above that `budget` and `gross` are log-transformed.\n    Why are the log-transformed values of the variables displayed rather than the original values (in U.S. dollars)?\n\n## Appendix\n\nBelow is a list of genres in the data set:\n\n::: {.cell}\n\n```{.r .cell-code}\nmovies %>% \n  distinct(genre) %>%\n  arrange(genre) %>% \n  datatable()\n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"htmlwidget-544e2bd93edf61a55bde\" style=\"width:100%;height:auto;\" class=\"datatables html-widget\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-544e2bd93edf61a55bde\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\"],[\"Action\",\"Adventure\",\"Animation\",\"Biography\",\"Comedy\",\"Crime\",\"Drama\",\"Family\",\"Fantasy\",\"History\",\"Horror\",\"Music\",\"Musical\",\"Mystery\",\"Romance\",\"Sci-Fi\",\"Sport\",\"Thriller\",\"Western\"]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>genre<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"order\":[],\"autoWidth\":false,\"orderClasses\":false,\"columnDefs\":[{\"orderable\":false,\"targets\":0}]}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::",
    "supporting": [
      "ae-0-movies_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../site_libs/htmlwidgets-1.5.4/htmlwidgets.js\"></script>\n<link href=\"../site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/datatables-binding-0.20/datatables.js\"></script>\n<script src=\"../site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"../site_libs/dt-core-1.11.3/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\n<link href=\"../site_libs/dt-core-1.11.3/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/dt-core-1.11.3/js/jquery.dataTables.min.js\"></script>\n<link href=\"../site_libs/crosstalk-1.2.0/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/crosstalk-1.2.0/js/crosstalk.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": null
  }
}