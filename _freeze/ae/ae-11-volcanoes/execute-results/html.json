{
  "hash": "37ec95997ff0a42d5b3dc2bc95a8bdbf",
  "result": {
    "markdown": "---\ntitle: \"AE 11: Multinomial classification\"\n---\n\n::: callout-important\nGo to the [course GitHub organization](https://github.com/sta210-s22) and locate the repo titled `ae-11-volcanoes-YOUR_GITHUB_USERNAME` to get started.\n:::\n\n## Packages\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(tidymodels)\nlibrary(knitr)\nlibrary(colorblindr)\n```\n:::\n\n## Data\n\nFor this application exercise we will work with a dataset of on volcanoes.\nThe data come from [The Smithsonian Institution](https://volcano.si.edu/) via [TidyTuesday](https://github.com/rfordatascience/tidytuesday/blob/master/data/2020/2020-05-12/readme.md).\n\n::: {.cell}\n\n```{.r .cell-code}\nvolcano <- read_csv(here::here(\"ae\", \"data/volcano.csv\"))\n```\n\n::: {.cell-output-stderr}\n```\nRows: 958 Columns: 26\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (18): volcano_name, primary_volcano_type, last_eruption_year, country, r...\ndbl  (8): volcano_number, latitude, longitude, elevation, population_within_...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n:::\n\nFirst, a bit of data prep:\n\n::: {.cell}\n\n```{.r .cell-code}\nvolcano <- volcano %>%\n  mutate(\n    volcano_type = case_when(\n      str_detect(primary_volcano_type, \"Stratovolcano\") ~ \"Stratovolcano\",\n      str_detect(primary_volcano_type, \"Shield\") ~ \"Shield\",\n      TRUE ~ \"Other\"\n    ),\n    volcano_type = fct_relevel(volcano_type, \"Stratovolcano\", \"Shield\", \"Other\")\n  ) %>%\n  select(\n    volcano_type, latitude, longitude, \n    elevation, tectonic_settings, major_rock_1\n    ) %>%\n  mutate(across(where(is.character), as_factor))\n```\n:::\n\n## Exploratory data analysis\n\n1.  Create a map of volcanoes that is faceted by `volcano_type`.\n\n::: {.cell}\n\n```{.r .cell-code}\nworld <- map_data(\"world\")\n\nworld_map <- ggplot() +\n  geom_polygon(\n    data = world, \n    aes(\n      x = long, y = lat, group = group),\n      color = \"white\", fill = \"gray50\", \n      size = 0.05, alpha = 0.2\n    ) +\n  theme_minimal() +\n  coord_quickmap() +\n  labs(x = NULL, y = NULL)\n\nworld_map +\n  geom_point(\n    data = volcano,\n    aes(x = longitude, y = latitude,\n        color = volcano_type, \n        shape = volcano_type),\n    alpha = 0.5\n  ) +\n  facet_wrap(~volcano_type) +\n  scale_color_OkabeIto()\n```\n\n::: {.cell-output-display}\n![](ae-11-volcanoes_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n## Build a new model\n\n2.  Build a new model that uses a recipe that includes geographic information (latitude and longitude). How does this model compare to the original? **Note:**\\\n    Use the same test/train split as well as same cross validation folds. Code for these is provided below.\n\n::: {.cell}\n\n```{.r .cell-code}\n# test/train split\nset.seed(1234)\n\nvolcano_split <- initial_split(volcano)\nvolcano_train <- training(volcano_split)\nvolcano_test  <- testing(volcano_split)\n\n# cv folds\nset.seed(9876)\n\nvolcano_folds <- vfold_cv(volcano_train, v = 5)\nvolcano_folds\n```\n\n::: {.cell-output-stdout}\n```\n#  5-fold cross-validation \n# A tibble: 5 × 2\n  splits            id   \n  <list>            <chr>\n1 <split [574/144]> Fold1\n2 <split [574/144]> Fold2\n3 <split [574/144]> Fold3\n4 <split [575/143]> Fold4\n5 <split [575/143]> Fold5\n```\n:::\n:::\n\nNew recipe, including geographic information:\n\n::: {.cell}\n\n```{.r .cell-code}\nvolcano_rec2 <- recipe(volcano_type ~ ., data = volcano_train) %>%\n  step_other(tectonic_settings) %>%\n  step_other(major_rock_1) %>%\n  step_dummy(all_nominal_predictors()) %>%\n  step_zv(all_predictors()) %>%\n  step_center(all_predictors())\n```\n:::\n\nOriginal model specification and new workflow:\n\n::: {.cell}\n\n```{.r .cell-code}\nvolcano_spec <- multinom_reg() %>%\n  set_engine(\"nnet\")\n\nvolcano_wflow2 <- workflow() %>%\n  add_recipe(volcano_rec2) %>%\n  add_model(volcano_spec)\n\nvolcano_wflow2\n```\n\n::: {.cell-output-stdout}\n```\n══ Workflow ════════════════════════════════════════════════════════════════════\nPreprocessor: Recipe\nModel: multinom_reg()\n\n── Preprocessor ────────────────────────────────────────────────────────────────\n5 Recipe Steps\n\n• step_other()\n• step_other()\n• step_dummy()\n• step_zv()\n• step_center()\n\n── Model ───────────────────────────────────────────────────────────────────────\nMultinomial Regression Model Specification (classification)\n\nComputational engine: nnet \n```\n:::\n:::\n\nFit resamples:\n\n::: {.cell}\n\n```{.r .cell-code}\nvolcano_fit_rs2 <- volcano_wflow2 %>%\n  fit_resamples(\n    volcano_folds, \n    control = control_resamples(save_pred = TRUE)\n    )\n\nvolcano_fit_rs2\n```\n\n::: {.cell-output-stdout}\n```\n# Resampling results\n# 5-fold cross-validation \n# A tibble: 5 × 5\n  splits            id    .metrics         .notes           .predictions      \n  <list>            <chr> <list>           <list>           <list>            \n1 <split [574/144]> Fold1 <tibble [2 × 4]> <tibble [0 × 1]> <tibble [144 × 7]>\n2 <split [574/144]> Fold2 <tibble [2 × 4]> <tibble [0 × 1]> <tibble [144 × 7]>\n3 <split [574/144]> Fold3 <tibble [2 × 4]> <tibble [0 × 1]> <tibble [144 × 7]>\n4 <split [575/143]> Fold4 <tibble [2 × 4]> <tibble [0 × 1]> <tibble [143 × 7]>\n5 <split [575/143]> Fold5 <tibble [2 × 4]> <tibble [0 × 1]> <tibble [143 × 7]>\n```\n:::\n:::\n\nCollect metrics:\n\n::: {.cell}\n\n```{.r .cell-code}\ncollect_metrics(volcano_fit_rs2)\n```\n\n::: {.cell-output-stdout}\n```\n# A tibble: 2 × 6\n  .metric  .estimator  mean     n std_err .config             \n  <chr>    <chr>      <dbl> <int>   <dbl> <chr>               \n1 accuracy multiclass 0.606     5  0.0138 Preprocessor1_Model1\n2 roc_auc  hand_till  0.695     5  0.0245 Preprocessor1_Model1\n```\n:::\n:::\n\nROC curves:\n\n::: {.cell}\n\n```{.r .cell-code}\nvolcano_fit_rs2 %>%\n  collect_predictions() %>%\n  group_by(id) %>%\n  roc_curve(\n    truth = volcano_type,\n    .pred_Stratovolcano:.pred_Other\n  ) %>%\n  autoplot()\n```\n\n::: {.cell-output-display}\n![](ae-11-volcanoes_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n## ROC curves\n\n3.  Recreate the ROC curve from the slides.\n\n::: {.cell}\n\n```{.r .cell-code}\nfinal_fit <- last_fit(\n  volcano_wflow2, \n  split = volcano_split\n  )\n\ncollect_predictions(final_fit) %>%\n  roc_curve(truth = volcano_type, .pred_Stratovolcano:.pred_Other) %>%\n  ggplot(aes(x = 1 - specificity, y = sensitivity, color = .level)) +\n  geom_path(size = 1) +\n  scale_color_OkabeIto() +\n  geom_abline(intercept = 0, slope = 1, linetype = \"dashed\", color = \"gray\") +\n  theme_minimal() +\n  labs(color = NULL)\n```\n\n::: {.cell-output-display}\n![](ae-11-volcanoes_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n## Acknowledgement\n\nThis exercise was inspired by [https://juliasilge.com/blog/multinomial-volcano-eruptions](https://juliasilge.com/blog/multinomial-volcano-eruptions/).",
    "supporting": [
      "ae-11-volcanoes_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": [],
    "engineDependencies": {},
    "preserve": {},
    "postProcess": null
  }
}